<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Vboar&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kass.top/"/>
  <updated>2016-04-24T11:37:58.259Z</updated>
  <id>http://kass.top/</id>
  
  <author>
    <name>Justin Wong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript中的严格模式</title>
    <link href="http://kass.top/2016/04/24/strict-mode-in-javascript/"/>
    <id>http://kass.top/2016/04/24/strict-mode-in-javascript/</id>
    <published>2016-04-24T08:47:24.000Z</published>
    <updated>2016-04-24T11:37:58.259Z</updated>
    
    <content type="html">&lt;p&gt;ECMAScript5引入了严格模式的概念，严格模式是JavaScript中的一种限制性更强的变种方式，在语义上与正常的JavaScript有所不同，分析更加严格。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;严格模式会将JavaScript陷阱直接变成明显的错误&lt;/li&gt;
&lt;li&gt;严格模式修正了一些引擎难以优化的错误：同样的代码有些时候严格模式会比非严格模式下更快&lt;/li&gt;
&lt;li&gt;严格模式禁用了一些有可能在未来版本中定义的语法&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;严格模式的开启&quot;&gt;&lt;a href=&quot;#严格模式的开启&quot; class=&quot;headerlink&quot; title=&quot;严格模式的开启&quot;&gt;&lt;/a&gt;严格模式的开启&lt;/h3&gt;&lt;p&gt;使用严格模式的编译指示（pragma）来开启严格模式，即一个不赋给任何变量的字符串：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“use strict”;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不支持严格模式的引擎会忽略掉这个编译指示，实现了向后兼容。&lt;/p&gt;
&lt;p&gt;严格模式的开启分为全局模式和局部模式。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;全局模式&lt;br&gt;在全局作用域中（函数外部）给出这个编译指示。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// doSomething&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;局部模式&lt;br&gt;只在函数中开启严格模式：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doSomething&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;    &#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// doSomething&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注意：&lt;code&gt;&amp;#39;use strict&amp;#39;;&lt;/code&gt;必须位于代码开头，前面不可以有任何有效的js代码（空语句也不行，注释除外）。&lt;/p&gt;
&lt;h3 id=&quot;严格模式的限制&quot;&gt;&lt;a href=&quot;#严格模式的限制&quot; class=&quot;headerlink&quot; title=&quot;严格模式的限制&quot;&gt;&lt;/a&gt;严格模式的限制&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;全局变量必须通过var关键字声明，否则会抛出异常。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;globalValue = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// Uncaught ReferenceError: globalValue is not defined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过delete操作符删除变量会抛出异常。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; value = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; value; &lt;span class=&quot;comment&quot;&gt;// Uncaught SyntaxError: Delete of an unqualified identifier in strict mode.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在严格模式中一部分字符变成了保留的关键字，包括implements, interface, let, package, private, protected, public, static和yield。在严格模式下，不能再用这些名字作为变量名、形参名或者函数名。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// Uncaught SyntaxError: Unexpected strict mode reserved word&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对一个对象的只读属性赋值会抛出异常，非严格模式下只是静默失败（无法赋新值但不抛出异常）。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.defineProperty(obj, &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;, &amp;#123;value: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, writable: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj.a = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// Uncaught TypeError: Cannot assign to read only property &#39;a&#39; of object &#39;#&amp;lt;Object&amp;gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对一个对象不可配置的属性使用delete操作符会抛出异常，非严格模式下只是静默失败。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;a: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.seal(obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; obj.a; &lt;span class=&quot;comment&quot;&gt;// Uncaught TypeError: Cannot delete property &#39;a&#39; of #&amp;lt;Object&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对一个不可扩展的对象添加属性会抛出异常，非严格模式下只是静默失败。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.preventExtensions(obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj.a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// Uncaught TypeError: Can&#39;t add property a, object is not extensible&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对象属性名不唯一将抛出异常，非严格模式的属性值是最后那个。（ES6中允许重名）&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&quot;AAA&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&quot;BBB&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;严格模式要求命名函数的参数名必须唯一，非严格模式通过参数名只能访问最后一个参数，要访问前面的参数要通过arguments对象。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a, a&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// doSomething&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Uncaught SyntaxError: Duplicate parameter name not allowed in this context&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;严格模式下函数的形参和arguments对象是相互独立的，非严格模式下是相互绑定的。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a, b&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a); &lt;span class=&quot;comment&quot;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]); &lt;span class=&quot;comment&quot;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a); &lt;span class=&quot;comment&quot;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;禁用了arguments.callee和arguments.caller。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;factorial&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;num&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (num &amp;lt;= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; num * &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;.callee(num - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;factorial(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Uncaught TypeError: &#39;caller&#39;, &#39;callee&#39;, and &#39;arguments&#39; properties may not be accessed on strict mode functions or the arguments objects for calls to them&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;函数的caller和arguments是不可删除的属性而且在存值、取值时都会抛出异常。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;    &quot;use strict&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func.caller;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func.arguments;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Uncaught TypeError: &#39;caller&#39; and &#39;arguments&#39; are restricted function properties and cannot be accessed in this context.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;只能在脚本的顶级和在函数内部声明函数。(经测试目前chrome没有抛出异常)&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125; &lt;span class=&quot;comment&quot;&gt;// 错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f2&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125; &lt;span class=&quot;comment&quot;&gt;// 错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f2();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;baz&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;// 合法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;eit&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&amp;#125; &lt;span class=&quot;comment&quot;&gt;// 合法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;eval()函数在包含上下文中不再创建变量或函数。可以在eval()中声明变量或函数，但随后会被销毁。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; evalX = &lt;span class=&quot;built_in&quot;&gt;eval&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&#39;use strict&#39;; var x = 42; x&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(x); &lt;span class=&quot;comment&quot;&gt;// 17&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(evalX); &lt;span class=&quot;comment&quot;&gt;// 42&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;禁止使用eval和arguments作为标识符，也不允许读写它们的值。&lt;br&gt;以下操作都会抛出异常：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用var声明&lt;/li&gt;
&lt;li&gt;赋予另一个值&lt;/li&gt;
&lt;li&gt;尝试修改包含的值，如++&lt;/li&gt;
&lt;li&gt;用作函数名&lt;/li&gt;
&lt;li&gt;用作命名的函数参数&lt;/li&gt;
&lt;li&gt;在try-catch语句中用作例外名&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;eval&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Uncaught SyntaxError: Unexpected eval or arguments in strict mode&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;call/apply/bind的第一个参数直接传入而不包装为对象。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func.call(&lt;span class=&quot;string&quot;&gt;&#39;abcd&#39;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// string，非严格模式是object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func.apply(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// number，非严格模式是object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;call/apply/bind的第一个参数为null/undefined时，this为null/undefined。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func.call(&lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// undefined，非严格模式是window（全局对象）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func.call(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// null，非严格模式是window（全局对象）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;禁用with语句。&lt;br&gt;with语句可以方便地用来引用某个特定对象中已有的属性。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt;(&amp;#123;a:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; v1 = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(v1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Uncaught SyntaxError: Strict mode code may not include a with statement&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;禁用八进制表示法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;022&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// Uncaught SyntaxError: Octal literals are not allowed in strict mode.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;《JavaScript高级程序设计》 附录B 严格模式&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Strict_mode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;严格模式 - MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/snandy/p/3428171.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ES5严格模式（Strict mode） - 博客园&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;ECMAScript5引入了严格模式的概念，严格模式是JavaScript中的一种限制性更强的变种方式，在语义上与正常的JavaScript有所不同，分析更加严格。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;严格模式会将JavaScript陷阱直接变成明显的错误&lt;/li&gt;
&lt;li&gt;严格模式
    
    </summary>
    
    
      <category term="前端" scheme="http://kass.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="http://kass.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>script元素详解</title>
    <link href="http://kass.top/2016/04/24/explanation-of-script-element/"/>
    <id>http://kass.top/2016/04/24/explanation-of-script-element/</id>
    <published>2016-04-24T03:01:55.000Z</published>
    <updated>2016-04-24T07:07:58.594Z</updated>
    
    <content type="html">&lt;h3 id=&quot;script元素&quot;&gt;&lt;a href=&quot;#script元素&quot; class=&quot;headerlink&quot; title=&quot;script元素&quot;&gt;&lt;/a&gt;script元素&lt;/h3&gt;&lt;p&gt;向HTML页面中插入JavaScript的方法就是使用&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;元素。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;元素有六个属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;src：包含JavaScript代码的外部文件，可选&lt;/li&gt;
&lt;li&gt;type：脚本语言的内容类型（MIME类型），默认为text/javascript，可选&lt;/li&gt;
&lt;li&gt;charset：通过src属性指定的代码的字符集，大多数浏览器会忽略，可选&lt;/li&gt;
&lt;li&gt;language：表示脚本语言，大多数浏览器会忽略，已废弃&lt;/li&gt;
&lt;li&gt;async：异步脚本，只对外部脚本文件有效，可选&lt;/li&gt;
&lt;li&gt;defer：延迟脚本，只对外部脚本文件有效，可选&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;元素的方式有两种：直接在页面中嵌入JavaScript代码和包含外部JavaScript文件。&lt;/p&gt;
&lt;p&gt;一些需要注意的问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用嵌入代码时，不能在代码中包含&lt;code&gt;&amp;lt;/script&amp;gt;&lt;/code&gt;字符串，必须通过转义&lt;code&gt;&amp;lt;\/script&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;使用外部代码时，不应该在&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;/script&amp;gt;&lt;/code&gt;标签之间包含额外的代码，否则嵌入的代码将被忽略&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;元素的src属性是不需要遵循同源策略的&lt;/li&gt;
&lt;li&gt;在不考虑async和defer的情况下，&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;元素位置的最佳实践是放在&lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt;标签的前面。如果放在&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;元素中，浏览器会因先下载执行js代码而阻塞页面渲染从而出现白屏页面&lt;/li&gt;
&lt;li&gt;浏览器在处理HTML页面渲染和JavaScript脚本执行的时候是单一进程的,所以在当浏览器在渲染HTML遇到了&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签会先去执行标签内的代码(如果是使用src属性加载的外链文件,则先下载再执行),在这个过程中,页面渲染和交互都会被阻塞&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;正常脚本、延迟脚本（defer）和异步脚本（async）&quot;&gt;&lt;a href=&quot;#正常脚本、延迟脚本（defer）和异步脚本（async）&quot; class=&quot;headerlink&quot; title=&quot;正常脚本、延迟脚本（defer）和异步脚本（async）&quot;&gt;&lt;/a&gt;正常脚本、延迟脚本（defer）和异步脚本（async）&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;main.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;br&gt;正常脚本，没有defer或async，浏览器会立即加载并执行指定的脚本，“立即”指的是在渲染该&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签后面的文档元素之前，也就是说不等待后续载入的文档元素，读到就加载并执行（阻塞页面解析和渲染）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;script defer src=&amp;quot;main.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;br&gt;延迟脚本，加载后续文档元素的过程将和main.js的加载并行进行（异步），但是main.js的执行要在所有元素解析完成之后、DOMContentLoaded事件触发之前完成。&lt;br&gt;延迟脚本保证执行的先后顺序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;script async src=&amp;quot;main.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;br&gt;异步脚本，加载和渲染后续文档元素的过程将和main.js的加载与执行并行进行（异步，注意js的执行和页面渲染不会同时进行）。&lt;br&gt;异步脚本下载好了就会立即执行。&lt;br&gt;异步脚本一定会在页面的load事件前执行，但可能会在DOMContentLoaded事件触发之前或之后执行。&lt;br&gt;异步脚本不保证执行的先后顺序。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://vboar.qiniudn.com/16-4-24/31931666.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;上图中绿色代表HTML解析，蓝色代表脚本下载，红色代表脚本执行。&lt;/p&gt;
&lt;p&gt;从上图得到的一些结论：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于延迟和异步脚本，脚本的下载和执行是异步的，表现为不阻塞HTML解析和页面渲染&lt;/li&gt;
&lt;li&gt;对于正常和异步脚本，脚本在下载完成之后会立即执行&lt;/li&gt;
&lt;li&gt;对于异步脚本，脚本的下载和执行是乱序的，完全不考虑脚本的依赖关系，适用于不依赖其他脚本和不作为其他脚本的依赖的脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;defer和async的测试&quot;&gt;&lt;a href=&quot;#defer和async的测试&quot; class=&quot;headerlink&quot; title=&quot;defer和async的测试&quot;&gt;&lt;/a&gt;defer和async的测试&lt;/h3&gt;&lt;p&gt;测试Demo来自 &lt;a href=&quot;https://segmentfault.com/a/1190000000339118&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;script关于async与defer属性的测试 - miser -segmentfault&lt;/a&gt;，使用nodejs作为server端。&lt;/p&gt;
&lt;p&gt;server代码如下：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; http = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;http&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http.createServer(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;req, res&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.writeHead(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;Content-Type&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;text/plain&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (req.url == &lt;span class=&quot;string&quot;&gt;&#39;/test1&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res.end(&lt;span class=&quot;string&quot;&gt;&quot;console.log(&#39;test1&#39;);&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (req.url == &lt;span class=&quot;string&quot;&gt;&#39;/test2&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            res.end(&lt;span class=&quot;string&quot;&gt;&quot;console.log(&#39;test2&#39;);&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res.end(&lt;span class=&quot;string&quot;&gt;&quot;console.log(&#39;test3&#39;);&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;).listen(&lt;span class=&quot;number&quot;&gt;8081&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;127.0.0.1&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Server running at http://127.0.0.1:8081/&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;HTML代码如下：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;script async defer&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;onload&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;DOMContentLoaded&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;DOMContentLoaded&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://127.0.0.1:8081/test1&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://127.0.0.1:8081/test2&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://127.0.0.1:8081/test3&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;测试结果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不设置defer和async：test1、test2、test3、DOMContentLoaded、onload（阻塞解析和渲染）&lt;/li&gt;
&lt;li&gt;设置全部为defer：test1、test2、test3、DOMContentLoaded、onload（全部延迟，可能有部分浏览器DOMContentLoaded事件最先执行）&lt;/li&gt;
&lt;li&gt;设置test1为defer：test2、test3、test1、DOMContentLoaded、onload（test1延迟）&lt;/li&gt;
&lt;li&gt;设置test1、test2为defer：test3、test1、test2、DOMContentLoaded、onload（defer保证顺序）&lt;/li&gt;
&lt;li&gt;设置全部为async：DOMContentLoaded、test3、test2、test1、onload（全部异步，async不保证顺序）&lt;/li&gt;
&lt;li&gt;设置test1为async：test2、test3、DOMContentLoaded、test1、onload&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;《JavaScript高级程序设计》 第2章&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/q/1010000000640869&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;defer和async的区别 - segmentfault&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000004379833&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;高性能JavaScript学习笔记-执行与加载 - 咸魚君 - segmentfault&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000000339118&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;script关于async与defer属性的测试 - miser -segmentfault&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;script元素&quot;&gt;&lt;a href=&quot;#script元素&quot; class=&quot;headerlink&quot; title=&quot;script元素&quot;&gt;&lt;/a&gt;script元素&lt;/h3&gt;&lt;p&gt;向HTML页面中插入JavaScript的方法就是使用&lt;code&gt;&amp;lt;script&amp;gt
    
    </summary>
    
    
      <category term="前端" scheme="http://kass.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="http://kass.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript中的正则表达式</title>
    <link href="http://kass.top/2016/04/22/Regular-Expressions-in-Javascript/"/>
    <id>http://kass.top/2016/04/22/Regular-Expressions-in-Javascript/</id>
    <published>2016-04-22T05:43:12.000Z</published>
    <updated>2016-04-24T07:49:57.011Z</updated>
    
    <content type="html">&lt;p&gt;JavaScript中的正则表达式和Perl的语法类似，虽然缺少了某些语言（特别是Perl）所支持的高级正则表达式特性，但功能已经非常强大的，平时的话已经足够用了。&lt;/p&gt;
&lt;h3 id=&quot;定义方式&quot;&gt;&lt;a href=&quot;#定义方式&quot; class=&quot;headerlink&quot; title=&quot;定义方式&quot;&gt;&lt;/a&gt;定义方式&lt;/h3&gt;&lt;p&gt;JavaScript中的正则表达式可以通过两种方式定义：&lt;/p&gt;
&lt;p&gt;1.使用正则表达式字面量定义&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; expression = &lt;span class=&quot;regexp&quot;&gt;/ pattern /&lt;/span&gt; flags ;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.使用RegExp构造函数创建&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; expression = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;pattern&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;flags&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;pattern表示模式，可以包含字符类、限定符、分组、向前查找和反向引用。&lt;br&gt;flags表示标志（可选），每个正则表达式可以包含一个或多个标志，用以标明正则表达式的行为。&lt;/p&gt;
&lt;p&gt;正则表达式的匹配模式支持下列3个标志：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;g：全局（global）模式，即模式将被应用于整个字符串，而不是只发现第一个匹配项&lt;/li&gt;
&lt;li&gt;i：不区分大小写（case-insensitive）模式&lt;/li&gt;
&lt;li&gt;m：多行（multiline）模式，即到达一行文本末尾会继续查找下一行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一些实例：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 匹配字符串中所有“love”的实例，不区分大小写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pattern1 = &lt;span class=&quot;regexp&quot;&gt;/love/gi&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pattern2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;love&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;gi&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 匹配字符串中所有“\love”的实例，不区分大小写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pattern3 = &lt;span class=&quot;regexp&quot;&gt;/\\love/gi&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pattern4 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\\\\love&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;gi&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 双重转义&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;两种定义方式的区别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两种定义方式定义的是完全等价的正则表达式&lt;/li&gt;
&lt;li&gt;由于通过RegExp构造函数创建正则表达式传入的参数是字符串，所以需要对元字符进行双重转义&lt;/li&gt;
&lt;li&gt;ECMAScript3中，正则表达式字面量始终会共享同一个RegExp实例，而使用构造函数创建的每一个新RegExp实例都是一个新实例&lt;/li&gt;
&lt;li&gt;ECMAScript5中，两种定义方式是一致的，每次都创建新的RegExp实例&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;RegExp实例属性&quot;&gt;&lt;a href=&quot;#RegExp实例属性&quot; class=&quot;headerlink&quot; title=&quot;RegExp实例属性&quot;&gt;&lt;/a&gt;RegExp实例属性&lt;/h3&gt;&lt;p&gt;RegExp对象的实例具有以下属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;global：布尔值，表示是否设置了 g 标志&lt;/li&gt;
&lt;li&gt;ignoreCase：布尔值，表示是否设置了 i 标志&lt;/li&gt;
&lt;li&gt;multiline：布尔值，表示是否设置了 m 标志&lt;/li&gt;
&lt;li&gt;source：正则表达式的字符串表示，按照字面量形式返回，而不是使用构造函数创建时传入的字符串（非双重转义）&lt;/li&gt;
&lt;li&gt;lastIndex：整数，表示开始搜索下一个匹配项的字符位置，从0算起&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;RegExp实例方法&quot;&gt;&lt;a href=&quot;#RegExp实例方法&quot; class=&quot;headerlink&quot; title=&quot;RegExp实例方法&quot;&gt;&lt;/a&gt;RegExp实例方法&lt;/h3&gt;&lt;p&gt;RegExp对象的实例有三个方法：test、exec和compile。&lt;/p&gt;
&lt;p&gt;test方法：&lt;br&gt;检测指定字符串是否含有某个子串（或者匹配模式），输入是字符串，输出是true或者false。&lt;br&gt;如果模式带有g标志，每次调用test方法会继续往下查找（根据lastIndex）。&lt;/p&gt;
&lt;p&gt;test的例子：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;string&quot;&gt;&#39;I\&#39;m from China and you\&#39;re from China too.&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p1 = &lt;span class=&quot;regexp&quot;&gt;/China/&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p1.test(s); &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p2 = &lt;span class=&quot;regexp&quot;&gt;/China/g&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p2.test(s); &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p2.lastIndex; &lt;span class=&quot;comment&quot;&gt;// 14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p2.test(s); &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p2.lastIndex; &lt;span class=&quot;comment&quot;&gt;// 37&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p2.test(s); &lt;span class=&quot;comment&quot;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p2.test(s); &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exec方法：&lt;br&gt;提取指定字符串中的符合要求的子串（或者匹配模式），输入是要应用模式的字符串，返回一个数组存放匹配结果；如果没有，则返回null。&lt;br&gt;返回的数组有两个额外的属性：index和input，index表示匹配项的第一个字符在字符串中的位置，input表示传入的字符串。&lt;br&gt;在数组中，第一项是与整个模式匹配的字符串，其他项是与模式中的捕获组匹配的字符串（可无）。&lt;br&gt;如果模式带有g标志，每次调用exec方法会继续往下查找（根据lastIndex，lastIndex是下一次开始查找的位置）。&lt;/p&gt;
&lt;p&gt;exec的例子：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;string&quot;&gt;&#39;I\&#39;m from China and you\&#39;re from China too.&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p1 = &lt;span class=&quot;regexp&quot;&gt;/Ch(i(n)a)/g&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; m1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    m1 = p1.exec(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(m1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(p1.lastIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(m1 !== &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;result:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&quot;China&quot;, &quot;ina&quot;, &quot;n&quot;, index: 9, input: &quot;I&#39;m from China and you&#39;re from China too.&quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&quot;China&quot;, &quot;ina&quot;, &quot;n&quot;, index: 31, input: &quot;I&#39;m from China and you&#39;re from China too.&quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;null&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;compile方法：&lt;br&gt;主要用于改变当前匹配模式（pattern）。&lt;/p&gt;
&lt;h3 id=&quot;RegExp构造函数属性&quot;&gt;&lt;a href=&quot;#RegExp构造函数属性&quot; class=&quot;headerlink&quot; title=&quot;RegExp构造函数属性&quot;&gt;&lt;/a&gt;RegExp构造函数属性&lt;/h3&gt;&lt;p&gt;RegExp构造函数属性类似于其他语言中的静态属性，适用于作用域中的所有正则表达式，并基于所执行的最近一次正则表达式操作而变化。&lt;br&gt;这些属性分别有一个长属性名和短属性名。&lt;/p&gt;
&lt;p&gt;RegExp构造函数属性列举如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;长属性名&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;短属性名&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;input&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;$_&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;最近一次要匹配的字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;lastMatch&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;$&amp;amp;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;最近一次的匹配项&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;lastParen&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;$+&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;最近一次匹配的捕获组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;multiline&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;$*&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;布尔值，表示是否所有表达式都使用多行模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;leftContext&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;$`&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;input字符串中lastMatch之前的文本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;rightContext&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;$’&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;input字符串中lastMatch之后的文本&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;长属性名可以通过点方式访问，短属性名则需要通过方括号语法访问。&lt;br&gt;除了上面的属性外，还有RegExp.$1, …, RegExp.$9这9个属性，分别存储第一，…，第九个匹配的捕获组，点或方括号语法都能访问到。&lt;/p&gt;
&lt;h3 id=&quot;方括号、元字符和量词&quot;&gt;&lt;a href=&quot;#方括号、元字符和量词&quot; class=&quot;headerlink&quot; title=&quot;方括号、元字符和量词&quot;&gt;&lt;/a&gt;方括号、元字符和量词&lt;/h3&gt;&lt;p&gt;方括号用于查找某个范围内的字符：&lt;br&gt;&lt;img src=&quot;http://vboar.qiniudn.com/16-4-22/91834367.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;元字符是拥有特殊含义的字符：&lt;br&gt;&lt;img src=&quot;http://vboar.qiniudn.com/16-4-22/41149787.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;《JS高程》说道：正则表达式中的元字符包括：( ) [ ] { } \ ^ $ | ? * + . （正则表达式转义）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其中，\s表示任意空白字符，\S表示任意非空白字符。空白字符有：空格符、制表符、回车符、换行符、垂直换行符和换页符。&lt;br&gt;\b代表单词的开头或结尾，即单词边界，匹配的只是一个位置，而不是一个字符。&lt;/p&gt;
&lt;p&gt;量词：&lt;br&gt;&lt;img src=&quot;http://vboar.qiniudn.com/16-4-22/28452881.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;贪婪匹配和懒惰匹配&quot;&gt;&lt;a href=&quot;#贪婪匹配和懒惰匹配&quot; class=&quot;headerlink&quot; title=&quot;贪婪匹配和懒惰匹配&quot;&gt;&lt;/a&gt;贪婪匹配和懒惰匹配&lt;/h3&gt;&lt;p&gt;贪婪匹配：匹配项的长度越长越好；懒惰匹配：匹配项尽可能短小。&lt;br&gt;懒惰匹配就是在贪婪匹配的基础上加?号（懒惰限定符）。&lt;/p&gt;
&lt;p&gt;例子：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;string&quot;&gt;&#39;Welcome to Nanjing University in Nanjing!&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p1 = &lt;span class=&quot;regexp&quot;&gt;/.*Nanjing/&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p2 = &lt;span class=&quot;regexp&quot;&gt;/.*?Nanjing/&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(p1.exec(s));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(p2.exec(s));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;String中与正则表达式相关的方法&quot;&gt;&lt;a href=&quot;#String中与正则表达式相关的方法&quot; class=&quot;headerlink&quot; title=&quot;String中与正则表达式相关的方法&quot;&gt;&lt;/a&gt;String中与正则表达式相关的方法&lt;/h3&gt;&lt;p&gt;String中与正则表达式相关的方法分别是search、match、replace、split，传入的参数可以是字符串也可以是正则表达式。&lt;/p&gt;
&lt;p&gt;search方法：&lt;br&gt;功能：搜索指定字符串中是否含有某子串（或者匹配模式），如有则返回子串在原串中的初始位置，如没有，返回-1。&lt;br&gt;search方法和test方法类似，只不过还可以返回位置，而且search方法会忽略g标志。&lt;br&gt;search方法和String的indexOf方法也类似，不过indexOf可以从指定位置开始查找，并且不支持正则表达式。&lt;/p&gt;
&lt;p&gt;search的例子：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;string&quot;&gt;&#39;Welcome to Nanjing University in Nanjing!&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p = &lt;span class=&quot;regexp&quot;&gt;/nanjing/i&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s.search(p)); &lt;span class=&quot;comment&quot;&gt;// 11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(p.test(s)); &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s.indexOf(&lt;span class=&quot;string&quot;&gt;&#39;Nanjing&#39;&lt;/span&gt;)); &lt;span class=&quot;comment&quot;&gt;// 11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;match方法：&lt;br&gt;功能：从指定字符串中查找子串或者匹配模式，找到返回数组，没找到返回null。&lt;br&gt;match方法是exec方法的轻量版，无g标志和exec一致，有g标志直接返回一个字符串数组，信息量比exec要少。&lt;/p&gt;
&lt;p&gt;match的例子：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;string&quot;&gt;&#39;Welcome to Nanjing University in Nanjing!&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p1 = &lt;span class=&quot;regexp&quot;&gt;/nanjing/i&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p2 = &lt;span class=&quot;regexp&quot;&gt;/nanjing/gi&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s.match(p1));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s.match(p2));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;replace方法：&lt;br&gt;功能：用另一个子串替换指定字符串中的某一子串（或者匹配模式），返回替换后新的字符串。&lt;br&gt;接收两个参数，第一个参数是要替换的子串或正则表达式，第二个参数是用于替换的子串。&lt;br&gt;如果带有g标志，则全部替换，如果没有则替换第一处。&lt;/p&gt;
&lt;p&gt;replace的例子：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;string&quot;&gt;&#39;Welcome to Nanjing University in Nanjing!&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s.replace(&lt;span class=&quot;string&quot;&gt;&#39;Nanjing&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Beijing&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s.replace(&lt;span class=&quot;regexp&quot;&gt;/Nanjing/&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Beijing&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s.replace(&lt;span class=&quot;regexp&quot;&gt;/Nanjing/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Beijing&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;用于替换的字符串中的$具有特定的含义：&lt;br&gt;&lt;img src=&quot;http://vboar.qiniudn.com/16-4-22/30472325.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;例子：将 Justin, Wong 替换成 Wong Justin&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&quot;Justin, Wong&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(name.replace(&lt;span class=&quot;regexp&quot;&gt;/(\w+)\s*,\s*(\w+)/&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;$2 $1&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;例子：用原串替换某子串&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;string&quot;&gt;&quot;Welcome to Nanjing University&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s.replace(&lt;span class=&quot;regexp&quot;&gt;/to/&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;$`&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;$&amp;amp;&#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;$\&#39;&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;replace方法的第二个参数还可以是函数。这个函数的第一个参数是匹配到的子串，接下来的参数是与模式中的子表达式匹配的字符串，可以有 0 个或多个这样的参数。接下来的参数是一个整数，声明了匹配在stringObject中出现的位置。最后一个参数是stringObject本身。后两个参数可以省略。&lt;/p&gt;
&lt;p&gt;例子：把字符串中所有单词的首字母都转换为大写&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;string&quot;&gt;&#39;welcome to Nanjing university&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; r = s.replace(&lt;span class=&quot;regexp&quot;&gt;/\b\w+\b/g&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;word&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; word.substring(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).toUpperCase() + word.substring(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(r);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;split方法：&lt;br&gt;功能：将一个字符串分割成字符串数组。&lt;br&gt;接收两个参数，第一个参数是分割符（字符串或正则表达式），第二个参数是返回数组的最大长度（可选）。&lt;/p&gt;
&lt;p&gt;split的例子：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;string&quot;&gt;&#39;Welcome to Nanjing University&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s.split(&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s.split(&lt;span class=&quot;regexp&quot;&gt;/\s+/&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s.split(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s.split(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;正则表达式的反向引用&quot;&gt;&lt;a href=&quot;#正则表达式的反向引用&quot; class=&quot;headerlink&quot; title=&quot;正则表达式的反向引用&quot;&gt;&lt;/a&gt;正则表达式的反向引用&lt;/h3&gt;&lt;p&gt;捕获组（子表达式）捕获到的内容，可以在正则表达式内部进行引用，即反向引用。&lt;br&gt;作用：查找或限定重复、查找或限定指定标识配对出现、等等&lt;br&gt;表示：\1, \2, …, \99&lt;/p&gt;
&lt;p&gt;例子：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;string&quot;&gt;&#39;njunjueducncn&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pattern = &lt;span class=&quot;regexp&quot;&gt;/(\w+)\1/g&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = s.match(pattern);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;例子：找出字符串中出现次数最多的字符&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;.prototype.getMost = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.split(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;).sort().join(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pattern = &lt;span class=&quot;regexp&quot;&gt;/(\w)\1*/g&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = s.match(pattern);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a.sort(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a, b&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a.length &amp;lt; b.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; letter = a[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; num = a[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; letter + &lt;span class=&quot;string&quot;&gt;&#39;: &#39;&lt;/span&gt; + num;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;string&quot;&gt;&#39;aaabbbcccaaabbbccccccdddaaaccddeeeee&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s.getMost());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;正则表达式的零宽断言&quot;&gt;&lt;a href=&quot;#正则表达式的零宽断言&quot; class=&quot;headerlink&quot; title=&quot;正则表达式的零宽断言&quot;&gt;&lt;/a&gt;正则表达式的零宽断言&lt;/h3&gt;&lt;p&gt;(?=exp)即零宽度正预测先行断言，它断言自身出现的位置的后面能匹配表达式exp。&lt;br&gt;(?!exp)即零宽度负预测先行断言，它断言此位置的后面不能匹配表达式exp。&lt;br&gt;JavaScript只支持前瞻，不支持后瞻。&lt;/p&gt;
&lt;p&gt;例子：获取字符串中以ing结尾的单词的前半部分&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;string&quot;&gt;&#39;I love dancing but he likes singing&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pattern = &lt;span class=&quot;regexp&quot;&gt;/\b\w+(?=ing\b)/g&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ans = s.match(pattern);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(ans);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;例子：获取第五位不是i的单词的前四位&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;string&quot;&gt;&#39;I love dancing but he likes singing&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pattern = &lt;span class=&quot;regexp&quot;&gt;/\b\w&amp;#123;4&amp;#125;(?!i)/g&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ans = s.match(pattern);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(ans);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;例子：给字符串加千分符&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;.prototype.getAns = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pattern = &lt;span class=&quot;regexp&quot;&gt;/(?=((?!\b)\d&amp;#123;3&amp;#125;)+$)/g&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.replace(pattern, &lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;string&quot;&gt;&#39;1000000000000&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(s.getAns());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;正则表达式相关教程、资源和工具&quot;&gt;&lt;a href=&quot;#正则表达式相关教程、资源和工具&quot; class=&quot;headerlink&quot; title=&quot;正则表达式相关教程、资源和工具&quot;&gt;&lt;/a&gt;正则表达式相关教程、资源和工具&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://c.biancheng.net/cpp/u/zhengze/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;正则表达式教程 - C语言中文网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.runoob.com/regexp/regexp-tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;正则表达式 - 菜鸟教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://regex101.com/#javascript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Online regex tester and debugger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.debuggex.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Debuggex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;《JavaScript高级程序设计》 5.4 RegExp类型&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.codeceo.com/article/javascript-reg-expression.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我所认识的JavaScript正则表达式 - codeceo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3school.com.cn/jsref/jsref_obj_regexp.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JavaScript RegExp 对象 - W3School&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000000699097&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JavaScript学习总结（八）正则表达式 - trigkit4 - segmentfault&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;JavaScript中的正则表达式和Perl的语法类似，虽然缺少了某些语言（特别是Perl）所支持的高级正则表达式特性，但功能已经非常强大的，平时的话已经足够用了。&lt;/p&gt;
&lt;h3 id=&quot;定义方式&quot;&gt;&lt;a href=&quot;#定义方式&quot; class=&quot;headerlink&quot; t
    
    </summary>
    
    
      <category term="前端" scheme="http://kass.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="http://kass.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>三四月份的暑期实习面试经历</title>
    <link href="http://kass.top/2016/04/21/interviews-in-March-and-April/"/>
    <id>http://kass.top/2016/04/21/interviews-in-March-and-April/</id>
    <published>2016-04-21T02:29:49.000Z</published>
    <updated>2016-04-22T07:46:17.428Z</updated>
    
    <content type="html">&lt;p&gt;三四月份我主要投了三家的暑期实习，分别是阿里、网易和腾讯，当然也有投其他的一些公司，但经历过面试的也只有这三家了。阿里是内推一面过了一个月之后显示已回绝，腾讯已经挂了，网易在等面试结果……不管怎么说，多参加一些面试总归是好的~&lt;/p&gt;
&lt;h3 id=&quot;阿里——淘宝FED前端&quot;&gt;&lt;a href=&quot;#阿里——淘宝FED前端&quot; class=&quot;headerlink&quot; title=&quot;阿里——淘宝FED前端&quot;&gt;&lt;/a&gt;阿里——淘宝FED前端&lt;/h3&gt;&lt;p&gt;阿里是3月6日学长内推过去的简历，然后3月7日下午就收到了电面电话，下面是我回忆的整个面试过程（过了一个多月可能有些忘掉了）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;面试官让我进行一分钟的自我介绍，然后我……没想到电面这么突然，并没有准备什么，所以只说了十多秒……&lt;/li&gt;
&lt;li&gt;然后面试官开始问简历上面的 &lt;a href=&quot;http://mebox.top/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;米盒&lt;/a&gt; 项目，并且他那边打开看了下，感觉他觉得不怎么样，然后让我介绍了下项目。&lt;/li&gt;
&lt;li&gt;面试官问：你在团队和项目中负责什么部分？略。&lt;/li&gt;
&lt;li&gt;面试官问：你作为组长，怎么管理小组、代码统一？我答统一编码规范blablabla……&lt;/li&gt;
&lt;li&gt;面试官问：你的项目有用到什么技术吗？我觉得这个答得很烂，因为我说没有用到什么技术，只是简单的Html、CSS、JS……&lt;/li&gt;
&lt;li&gt;面试官问：你在项目中遇到最大的困难是什么？我答了跨域问题以及解决方案，怎么解决。&lt;/li&gt;
&lt;li&gt;面试官问：你现在在一个创业团队里，为什么要来阿里实习？略。&lt;/li&gt;
&lt;li&gt;最后面试官问我还有什么问题，我就问他对我们的项目有什么看法，他说他主要是看面试者在面试中的表现，而不是看项目本身，而且他在大学的时候自己也有创业，而且他觉得90%的创业终究都会失败……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大概就这样扯了差不多20分钟吧，然后面试官说会在这周内出结果，然后就没有然后了，直到4月7日招聘官网上的状态变成了已回绝。&lt;/p&gt;
&lt;h3 id=&quot;网易——杭研互联网产品前端开发&quot;&gt;&lt;a href=&quot;#网易——杭研互联网产品前端开发&quot; class=&quot;headerlink&quot; title=&quot;网易——杭研互联网产品前端开发&quot;&gt;&lt;/a&gt;网易——杭研互联网产品前端开发&lt;/h3&gt;&lt;p&gt;网易是从 &lt;a href=&quot;http://www.nowcoder.com/162396&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;牛客网&lt;/a&gt; 那里拿到的内推码，然后就可以参加笔试了额，自我感觉笔试题做了不怎么样，最后两道JS编程题感觉都是凭感觉去写，结果4月7日收到了4月14日去杭州的面试通知短信和邮件，并且做完了一个测评（IQ题、EQ题、语言能力题、数学题等等）。&lt;br&gt;网易的所有面试都是在一个大厅里的，嗯，摆布得很有规则。&lt;/p&gt;
&lt;h4 id=&quot;一面&quot;&gt;&lt;a href=&quot;#一面&quot; class=&quot;headerlink&quot; title=&quot;一面&quot;&gt;&lt;/a&gt;一面&lt;/h4&gt;&lt;p&gt;一面的面试官是个哥哥，一面大概有半个小时吧，下面是面试过程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;还是先让我自我介绍，然后他就开始看简历。在有阿里的教训之后，我当然会好好的准备一下自我介绍了。&lt;/li&gt;
&lt;li&gt;然后还是让我说一下 &lt;a href=&quot;http://mebox.top/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;米盒&lt;/a&gt; 项目，并且打开了网站，问我负责哪些部分，并且挑了个不是我写的问我这要怎么实现。&lt;/li&gt;
&lt;li&gt;下面就是一大堆常规问题了，有直接答的，也有画图的、写代码的：&lt;ul&gt;
&lt;li&gt;CSS盒模型、如何使width包括padding和border。&lt;/li&gt;
&lt;li&gt;写一个4个等分的div在同一行的布局；让div之间有空隙。&lt;/li&gt;
&lt;li&gt;写一个匿名自执行函数。&lt;/li&gt;
&lt;li&gt;说说你对闭包的理解。&lt;/li&gt;
&lt;li&gt;CSS中的动画怎么实现（写一个大框架）。&lt;/li&gt;
&lt;li&gt;简单说一下TCP的三次握手。&lt;/li&gt;
&lt;li&gt;HTTP状态码有哪些。&lt;/li&gt;
&lt;li&gt;DOM事件有哪些阶段（捕获和冒泡），还具体闻到了event的细节。&lt;/li&gt;
&lt;li&gt;call和apply的区别，知道bind吗。&lt;/li&gt;
&lt;li&gt;面向对象的特性，写一个JS里的继承（还关联到了各种继承方式的不同）。&lt;/li&gt;
&lt;li&gt;数据结构和算法：树的广度优先遍历用什么数据结构实现。&lt;/li&gt;
&lt;li&gt;等等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;最后面试官问我还有什么问题，我问他网易对实习生的期望和要求是什么，实习生进去之后要做些什么。他说实习生要尽快融入团队和熟悉项目，然后就可以写一些项目的小部分了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;二面&quot;&gt;&lt;a href=&quot;#二面&quot; class=&quot;headerlink&quot; title=&quot;二面&quot;&gt;&lt;/a&gt;二面&lt;/h4&gt;&lt;p&gt;二面的面试官是位和蔼的叔叔，二面的时间比较短，貌似只有十几分钟的样子，下面是面试过程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自我介绍&lt;/li&gt;
&lt;li&gt;面试官先问了我，我的CSS和JS哪个强一点，我一开始还以为问的是CSS和JS哪个厉害，然后才明白问的是我的能力，就说差不多……&lt;/li&gt;
&lt;li&gt;让我惊讶的是二面的面试官问的是下面的这些问题：&lt;ul&gt;
&lt;li&gt;CSS3的新特性&lt;/li&gt;
&lt;li&gt;Html5的新特性&lt;/li&gt;
&lt;li&gt;清除浮动的方法和原理&lt;/li&gt;
&lt;li&gt;Javascript中的原型&lt;/li&gt;
&lt;li&gt;等等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有没有看过jQuery的源码。&lt;/li&gt;
&lt;li&gt;有没有用过网易的XXX框架。&lt;/li&gt;
&lt;li&gt;有没有了解过freemark。&lt;/li&gt;
&lt;li&gt;平时怎么学习前端，我说看书籍和网上的教程，书籍的话最近看《CSS权威指南》、《CSS设计指南》、《Javascript高级程序设计》、《Javascript权威指南》。都看完了吗，权威指南这么厚，我说没有，最近还在看，要把代码敲一遍，效果更好。&lt;/li&gt;
&lt;li&gt;什么时候能实习，我说七月份开始，可以实习六个月。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;HR面&quot;&gt;&lt;a href=&quot;#HR面&quot; class=&quot;headerlink&quot; title=&quot;HR面&quot;&gt;&lt;/a&gt;HR面&lt;/h4&gt;&lt;p&gt;HR面主要是一个大姐姐，旁边还坐着一个“阿姨”，时间的话大概十多分钟吧：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自我介绍&lt;/li&gt;
&lt;li&gt;介绍一下米盒&lt;/li&gt;
&lt;li&gt;我在项目中负责什么&lt;/li&gt;
&lt;li&gt;工作城市是什么&lt;/li&gt;
&lt;li&gt;还聊了一些其他的东西，具体的不记得了&lt;/li&gt;
&lt;li&gt;最后我问了她不同部门之间是如何沟通和交流的，她说当然有借助很多工具，但更重要的是面对面的沟通和交流。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;网易面试结束之后，花了两个多快三个小时绕着西湖走了一圈，真的是累坏了……&lt;/p&gt;
&lt;h3 id=&quot;腾讯——前端开发&quot;&gt;&lt;a href=&quot;#腾讯——前端开发&quot; class=&quot;headerlink&quot; title=&quot;腾讯——前端开发&quot;&gt;&lt;/a&gt;腾讯——前端开发&lt;/h3&gt;&lt;p&gt;腾讯的话三月份学长帮我内推完并没有什么反馈，最后还是参加了统一的笔试，虽然大部分都是c++题，没有前端题，但很幸运的是居然过了，于是从4月15日开始参加面试。腾讯的面试是在一间酒店里的，然后面试官是在单独的一间房间里。&lt;/p&gt;
&lt;h4 id=&quot;一面-1&quot;&gt;&lt;a href=&quot;#一面-1&quot; class=&quot;headerlink&quot; title=&quot;一面&quot;&gt;&lt;/a&gt;一面&lt;/h4&gt;&lt;p&gt;一面在4月15日上午10点多，面试官是一个大哥哥，感觉面试时间还蛮长的，也有半个多小时了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自我介绍&lt;/li&gt;
&lt;li&gt;Javascript中有哪些基本数据类型&lt;/li&gt;
&lt;li&gt;CSS盒模型，如何使width包括padding和border&lt;/li&gt;
&lt;li&gt;代码题，写输出：this的理解&lt;/li&gt;
&lt;li&gt;判断是不是数组&lt;/li&gt;
&lt;li&gt;Javascript中的原型是干什么的&lt;/li&gt;
&lt;li&gt;说一下原生Ajax&lt;/li&gt;
&lt;li&gt;输入www.qq.com发生了什么&lt;/li&gt;
&lt;li&gt;要不要到深圳来，深圳招的人比较多&lt;/li&gt;
&lt;li&gt;智力题：给两个杯子，一个300ml，一个500ml，水无限，量出400ml的水。在面试官的指导下我才答出来。500ml杯装满水倒进300ml杯中，倒掉300ml杯中的水，500ml杯中剩下200ml倒进300ml杯中，然后500ml杯装满水倒满300ml杯中，则500ml杯中剩400ml水。&lt;/li&gt;
&lt;li&gt;有什么问题要问他，我就问腾讯对实习生的期望和要求是什么，他说对实习生的期望不高，主要是人才储备，达到双赢的局面。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;二面-1&quot;&gt;&lt;a href=&quot;#二面-1&quot; class=&quot;headerlink&quot; title=&quot;二面&quot;&gt;&lt;/a&gt;二面&lt;/h4&gt;&lt;p&gt;二面是在4月16日上午11点左右，面试官也算是个大哥哥吧，面了大概二十多分钟。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自我介绍&lt;/li&gt;
&lt;li&gt;性能优化的手段&lt;/li&gt;
&lt;li&gt;兼容性相关的内容&lt;/li&gt;
&lt;li&gt;你觉得jQuery还有什么不足&lt;/li&gt;
&lt;li&gt;对于项目的监控，有没有做&lt;/li&gt;
&lt;li&gt;像ReactJS和Vuejs有什么买点&lt;/li&gt;
&lt;li&gt;跨域的问题&lt;/li&gt;
&lt;li&gt;前端安全问题，XSS和CSRF，如何解决&lt;/li&gt;
&lt;li&gt;项目中遇到的最大的困难，怎么解决&lt;/li&gt;
&lt;li&gt;大学课程对于前端的学习有没有什么作用&lt;/li&gt;
&lt;li&gt;平时有没有关注什么关于前端的社区和博客&lt;/li&gt;
&lt;li&gt;有没有特别佩服的人，怎么努力&lt;/li&gt;
&lt;li&gt;职业规划，怎么努力&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;HR面-1&quot;&gt;&lt;a href=&quot;#HR面-1&quot; class=&quot;headerlink&quot; title=&quot;HR面&quot;&gt;&lt;/a&gt;HR面&lt;/h4&gt;&lt;p&gt;HR面是在4月16日下午五点左右，面了十分钟左右，面试官个漂亮的姐姐~&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自我介绍&lt;/li&gt;
&lt;li&gt;为什么选择前端&lt;/li&gt;
&lt;li&gt;为什么选择软件工程&lt;/li&gt;
&lt;li&gt;为什么在南京上大学&lt;/li&gt;
&lt;li&gt;工作城市的选择&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;腾讯应该是目前最想去的公司吧，然而现在还是等待面试结果中……&lt;br&gt;4.22 更新：已经显示“目前的岗位可能并不适合你”，也就是挂了吧……&lt;/p&gt;
&lt;h3 id=&quot;小结&quot;&gt;&lt;a href=&quot;#小结&quot; class=&quot;headerlink&quot; title=&quot;小结&quot;&gt;&lt;/a&gt;小结&lt;/h3&gt;&lt;p&gt;通过这几次面试，发现自己还是有很多知识漏洞的，基本的CSS和JS还有很多没有掌握的地方，希望继续努力吧，把那几本书再认真看一遍，同时也要学习一些框架、工具和新技术。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;三四月份我主要投了三家的暑期实习，分别是阿里、网易和腾讯，当然也有投其他的一些公司，但经历过面试的也只有这三家了。阿里是内推一面过了一个月之后显示已回绝，腾讯已经挂了，网易在等面试结果……不管怎么说，多参加一些面试总归是好的~&lt;/p&gt;
&lt;h3 id=&quot;阿里——淘宝FED前端
    
    </summary>
    
    
      <category term="面试" scheme="http://kass.top/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>CSS中的单位：px、em和rem</title>
    <link href="http://kass.top/2016/04/20/px-em-rem-in-CSS/"/>
    <id>http://kass.top/2016/04/20/px-em-rem-in-CSS/</id>
    <published>2016-04-20T12:35:27.000Z</published>
    <updated>2016-04-22T07:52:09.705Z</updated>
    
    <content type="html">&lt;p&gt;最近我一直在做一个项目叫 &lt;a href=&quot;http://mebox.top/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;米盒&lt;/a&gt;（其实已经做了好几个月了= =），然后里面的度量单位大部分都是px，因为米盒也有Android和iOS的APP，所以并没有适配手机和做响应式什么的，所以就做了固定大小和定位的电脑网页版。但是我觉得后面肯定要做响应式的，所以参考了网上的几篇关于CSS中单位的文章，小结了一下~&lt;/p&gt;
&lt;h3 id=&quot;px、em和rem&quot;&gt;&lt;a href=&quot;#px、em和rem&quot; class=&quot;headerlink&quot; title=&quot;px、em和rem&quot;&gt;&lt;/a&gt;px、em和rem&lt;/h3&gt;&lt;p&gt;px：即Pixel（像素），相对长度单位，px是相对于显示器屏幕分辨率而言的。&lt;br&gt;em：相对长度单位，相对于当前对象内文本的字体尺寸。&lt;br&gt;rem：即root em，相对长度单位，相对于HTML根元素的字体尺寸。&lt;/p&gt;
&lt;p&gt;浏览器的默认设定：&lt;br&gt;大多数浏览器中html和body标签中的默认字体尺寸是100%。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;100% = 16px = 1em = 1rem&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;改变html标签的字体尺寸会影响到使用em和rem作为尺寸单位的标签，但px不受影响。&lt;br&gt;例子：&lt;a href=&quot;https://jsfiddle.net/vboar/bs5dmjko/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://jsfiddle.net/vboar/bs5dmjko/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;简化font-size的计算：&lt;br&gt;将html的font-size设为62.5%，那么1em=10px，1.6em=16px。&lt;br&gt;例子：&lt;a href=&quot;https://jsfiddle.net/vboar/25goahse/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://jsfiddle.net/vboar/25goahse/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;em和rem的区别：&lt;br&gt;em的值不是固定的，而且会继承父元素的字体尺寸；%也是会继承父元素的字体尺寸的。&lt;br&gt;而rem则仅仅相对于html根元素的字体尺寸而言，与父元素字体尺寸无关。&lt;br&gt;例子：&lt;a href=&quot;https://jsfiddle.net/vboar/1baoLbh7/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://jsfiddle.net/vboar/1baoLbh7/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;单位的最佳实践：&lt;br&gt;使用rem，并使用px作为备用单位，因为rem不支持IE8及其以下版本。&lt;br&gt;例子：&lt;a href=&quot;https://jsfiddle.net/vboar/Lpqpmans/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://jsfiddle.net/vboar/Lpqpmans/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;px、em、rem单位转换小工具：&lt;br&gt;地址：&lt;a href=&quot;http://pxtoem.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pxtoem.com/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000002702464&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于CSS中的字体尺寸设置 - iLeo - SegmentFault&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.huolg.net/html5/html5_basis/641&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;css中px和em,rem的区别&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近我一直在做一个项目叫 &lt;a href=&quot;http://mebox.top/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;米盒&lt;/a&gt;（其实已经做了好几个月了= =），然后里面的度量单位大部分都是px，因为米盒也有Android和iOS的APP，所以并
    
    </summary>
    
    
      <category term="前端" scheme="http://kass.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS" scheme="http://kass.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>之前面试遇到的一道智力题</title>
    <link href="http://kass.top/2016/03/04/a-brain-teaser-in-an-interview/"/>
    <id>http://kass.top/2016/03/04/a-brain-teaser-in-an-interview/</id>
    <published>2016-03-04T04:20:31.000Z</published>
    <updated>2016-03-15T13:36:21.515Z</updated>
    
    <content type="html">&lt;p&gt;大二的时候参加了一次某外企实习生招聘的群面，其中有一道题目是智力题，题目大致就是这样的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给一个瞎子52张扑克牌，并告诉他里面恰好有10张牌是正面朝上的。要求这个瞎子把牌分成两堆，使得每堆牌里正面朝上的牌的张数一样多。瞎子应该怎么做？（瞎子摸不出牌是正面或者是反面，但是却可以随意翻动每一张牌）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当给出这道题目的时候，我还不知道这究竟是道什么类型的题目，该往什么方向去思考。当时是三个人一组一起讨论，我们一开始的思路都是偏向于概率论之类的数学思维上…所以最后也没能找到正确的答案。后来面试结束的时候，有同学就赶紧百度，结果发现答案却如此简单，只要找对了方向就好…&lt;/p&gt;
&lt;p&gt;我们先把52张牌分成两堆A和B，A堆中10张，B堆中42张。那么假设A堆中有m张正面，则有(10-m)张反面，B堆中有n张正面，则有(42-n)张反面。我们知道，m+n=10。那么可以把A堆翻过来，那么有(10-m)张正面，m张反面。显然这时候10-m=n，所以两堆牌里正面朝上的牌数一样多。&lt;/p&gt;
&lt;p&gt;当时没想出来的原因主要还是被题目的条件迷惑到了，他说“使得每堆牌里正面朝上的牌的张数一样多”，这并不需要保证两堆牌中每堆正面的牌都是5张，只要相同就可以了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;大二的时候参加了一次某外企实习生招聘的群面，其中有一道题目是智力题，题目大致就是这样的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;给一个瞎子52张扑克牌，并告诉他里面恰好有10张牌是正面朝上的。要求这个瞎子把牌分成两堆，使得每堆牌里正面朝上的牌的张数一样多。瞎子应该怎么做？
    
    </summary>
    
    
      <category term="面试" scheme="http://kass.top/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="智力题" scheme="http://kass.top/tags/%E6%99%BA%E5%8A%9B%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>同源策略和AJAX跨域请求的解决方案</title>
    <link href="http://kass.top/2016/03/03/same-origin-policy-and-solutions-for-cross-origin-ajax-request/"/>
    <id>http://kass.top/2016/03/03/same-origin-policy-and-solutions-for-cross-origin-ajax-request/</id>
    <published>2016-03-02T19:06:21.000Z</published>
    <updated>2016-04-22T07:52:17.756Z</updated>
    
    <content type="html">&lt;p&gt;之前写Web项目的时候一般都是用AJAX调用服务器提供的接口获得数据，但后来遇到了AJAX由于不同源而不用跨域请求的问题。为了实现AJAX跨域请求，我重新回顾了之前在《面向Web的计算》课上讲过的同源策略（Same Origin Policy, SOP），并了解AJAX跨域请求的几种常见的解决方案。结合网上的一些文章和参考资料，整理出下面的关于同源策略和AJAX跨域请求解决方案的笔记。&lt;/p&gt;
&lt;h3 id=&quot;同源策略（Same-Origin-Policy-SOP）&quot;&gt;&lt;a href=&quot;#同源策略（Same-Origin-Policy-SOP）&quot; class=&quot;headerlink&quot; title=&quot;同源策略（Same Origin Policy, SOP）&quot;&gt;&lt;/a&gt;同源策略（Same Origin Policy, SOP）&lt;/h3&gt;&lt;p&gt;同源策略，它是由 Netscape 提出的一个著名的安全策略，现在所有支持JavaScript 的浏览器都会使用这个策略。&lt;/p&gt;
&lt;p&gt;所谓同源，是指域名、协议、端口都相同。如果两个页面的域名、协议和端口都相同，那么这两个页面就同源，属于同一个域（Domain ）。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://kass.top&quot;&gt;http://kass.top&lt;/a&gt; 和 &lt;a href=&quot;http://www.kass.top&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.kass.top&lt;/a&gt; 不同源，因为域名不同&lt;br&gt;&lt;a href=&quot;http://kass.top&quot;&gt;http://kass.top&lt;/a&gt; 和 &lt;a href=&quot;https://kass.top&quot;&gt;https://kass.top&lt;/a&gt; 不同源，因为协议不同&lt;br&gt;&lt;a href=&quot;http://kass.top:80&quot;&gt;http://kass.top:80&lt;/a&gt; 和 &lt;a href=&quot;http://kass.top:8080&quot;&gt;http://kass.top:8080&lt;/a&gt; 不同源，因为端口不同&lt;br&gt;&lt;a href=&quot;http://kass.top/tags&quot;&gt;http://kass.top/tags&lt;/a&gt; 和 &lt;a href=&quot;http://kass.top/about&quot;&gt;http://kass.top/about&lt;/a&gt; 同源&lt;/p&gt;
&lt;p&gt;同源策略限制了一个源中加载文本或脚本与来自其他源中资源的交互方式，简单的说就是一个源上的JS 只能访问当前源的资源。不同源的客户端脚本(javascript、ActionScript)在没明确授权的情况下，不能读写对方的资源。这些资源包括：DOM、通过AJAX请求的网络资源、cookie等。需要遵循同源策略的地方有：跨frame脚本、跨window脚本、cookie访问、XMLHttpRequest请求等。&lt;/p&gt;
&lt;p&gt;那为什么像script、style、img标签可以引入不同源的文本或脚本呢？因为同源策略本身是在Web前端的安全性和灵活性选择了一个平衡点，同源策略允许这些标签跨域引用资源而不必部署在同一台服务器上。&lt;/p&gt;
&lt;h4 id=&quot;如果不遵循同源策略，会这么样呢？&quot;&gt;&lt;a href=&quot;#如果不遵循同源策略，会这么样呢？&quot; class=&quot;headerlink&quot; title=&quot;如果不遵循同源策略，会这么样呢？&quot;&gt;&lt;/a&gt;如果不遵循同源策略，会这么样呢？&lt;/h4&gt;&lt;p&gt;1.链接跳转的问题：假设有一个钓鱼页面 &lt;a href=&quot;http://money.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://money.com/&lt;/a&gt; ，诱导用户在这个页面上打开 &lt;a href=&quot;http://www.alipay.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.alipay.com/&lt;/a&gt; （使用window.open打开），这时候钓鱼页面就可以获取支付宝页面窗口的句柄即window对象，即获得了对支付宝页面的控制权，账号密码什么的也就轻而易举地获得了。&lt;br&gt;2.AJAX请求的问题： 假设在 &lt;a href=&quot;http://money.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://money.com/&lt;/a&gt; 页面发起一个对 &lt;a href=&quot;http://www.alipay.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.alipay.com/&lt;/a&gt; 某接口的AJAX请求，如果不遵循同源策略，那么这样的请求是允许的，此次HTTP请求所带的cookie当然是 &lt;a href=&quot;http://www.alipay.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.alipay.com/&lt;/a&gt; 下的cookie，有了cookie，还有什么信息是不能获得的呢？&lt;/p&gt;
&lt;p&gt;可以看到，如果浏览器不遵循同源策略，将会存在很严重的安全性问题。但有的时候，我们需要在当前页面加载与其不同源的资源，比如AJAX跨域请求，在保证一定安全的情况下如何实现呢？&lt;/p&gt;
&lt;h3 id=&quot;AJAX跨域请求的解决方案&quot;&gt;&lt;a href=&quot;#AJAX跨域请求的解决方案&quot; class=&quot;headerlink&quot; title=&quot;AJAX跨域请求的解决方案&quot;&gt;&lt;/a&gt;AJAX跨域请求的解决方案&lt;/h3&gt;&lt;p&gt;AJAX（Asynchronous Javascript And XML），即异步Javascript和XML。AJAX的基础是XMLHttpRequest对象，之前提到过XMLHttpRequest对象是需要遵循同源策略的，所以AJAX跨域请求需要遵循同源策略。&lt;/p&gt;
&lt;p&gt;下面我们来验证一下AJAX的跨域请求。&lt;/p&gt;
&lt;p&gt;v1.com页面的代码如下，向v2.com发起一次AJAX请求。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;//cdn.bootcss.com/jquery/2.2.1/jquery.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.ajax(&lt;span class=&quot;string&quot;&gt;&quot;http://v2.com/&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;v2.com返回一个字符串success。&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; json_encode(&lt;span class=&quot;string&quot;&gt;&quot;success&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;控制台的输出结果如下，可以看到由于同源策略这样的AJAX跨域请求是不允许的。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;XMLHttpRequest cannot load http://v2.com/. No &amp;apos;Access-Control-Allow-Origin&amp;apos; header is present on the requested resource. Origin &amp;apos;http://v1.com&amp;apos; is therefore not allowed access.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那么如何解决AJAX的跨域问题，实现AJAX的跨域请求呢？下面给出几种常见的解决方案。&lt;/p&gt;
&lt;h4 id=&quot;通过CORS进行跨域&quot;&gt;&lt;a href=&quot;#通过CORS进行跨域&quot; class=&quot;headerlink&quot; title=&quot;通过CORS进行跨域&quot;&gt;&lt;/a&gt;通过CORS进行跨域&lt;/h4&gt;&lt;p&gt;CORS（Cross-Origin Resource Sharing ），跨域资源共享，是W3C XMLHttpRequest Level 2 里规定的一种跨域方式。CORS定义了一种浏览器和服务器交互的方式来确定是否允许跨域请求。通过CORS实现AJAX跨域请求比较简单，只需要由服务器发送一个响应标头（Response Header）。&lt;/p&gt;
&lt;p&gt;如今基本上所有常用的浏览器都支持CORS（老IE除外），在 &lt;a href=&quot;http://caniuse.com/#feat=cors&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://caniuse.com/#feat=cors&lt;/a&gt; 中可以查询到浏览器对CORS的支持情况。可以看到，Chrome、Firefox、Safari、Opera、Edge、IE11以及移动设备浏览器等均支持CORS，所以我认为CORS可能是最好的实现AJAX跨域请求的解决方案。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;caniuse.com 是一个提供HTML5, CSS3, JS等新技术浏览器兼容一览表的网站，可以提高前端开发的工作效率。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过CORS实现AJAX跨域请求，需要服务器设置一个响应标头：设置Access-Control-Allow-Origin。&lt;/p&gt;
&lt;p&gt;HTTP头的设置方法有很多，下面以Apache和PHP为例：&lt;/p&gt;
&lt;p&gt;1.Apache：需要开启mod_headers模块，在配置文件中和.htaccess文件中均可以加入：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Header set Access-Control-Allow-Origin &amp;quot;*&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设置为*即允许所有其他域发起的AJAX请求当前服务器的数据，这样是非常不安全的，所以应该设置为我们需要允许请求数据的域：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Header set Access-Control-Allow-Origin &amp;quot;http://v1.com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设置完之后，当我们访问v1.com时，控制台再也没有错误提示了，能够成功地获取v2.com的数据。&lt;/p&gt;
&lt;p&gt;2.PHP：直接在PHP代码中设置就好了：&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;header(&lt;span class=&quot;string&quot;&gt;&quot;Access-Control-Allow-Origin: http://v1.com&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; json_encode(&lt;span class=&quot;string&quot;&gt;&quot;success&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当然，nginx、tomcat等都可以设置HTTP头，更多的设置见 &lt;a href=&quot;http://enable-cors.org/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://enable-cors.org/server.html&lt;/a&gt; 。可以在 &lt;a href=&quot;http://client.cors-api.appspot.com/client&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://client.cors-api.appspot.com/client&lt;/a&gt; 进行CORS的测试。&lt;/p&gt;
&lt;p&gt;通过CORS实现AJAX的跨域请求就这么简单，但有时候还是会遇到少数浏览器不兼容的情况，我们需要检测浏览器是否支持CORS，原生Javacript发送AJAX请求代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; createCORSRequest = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;method, url&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; xhr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLHttpRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&quot;withCredentials&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xhr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 判断XMLHttpRequest对象中是否有withCredentials属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// withCredentials属性仅仅存在于XMLHTTPRequest2对象中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// Chrome, Firefox, Opera and Safari 均使用XMLHTTPRequest2对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xhr.open(method, url, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; XDomainRequest != &lt;span class=&quot;string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 判断是否是XDomainRequest对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// XDomainRequest对象只存在于IE中，是IE用来实现CORS跨域请求的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xhr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XDomainRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xhr.open(method, url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 浏览器不支持CORS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xhr = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; xhr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;string&quot;&gt;&#39;http://v2.com&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; method = &lt;span class=&quot;string&quot;&gt;&#39;GET&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; xhr = createCORSRequest(method, url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!xhr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;CORS not supported&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xhr.onload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// Success code goes here.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; responseText = xhr.responseText;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(responseText);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xhr.onerror = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// Error code goes here.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;There was an error!&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xhr.send();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;标准的CORS请求默认不发送任何cookies。为了发送请求时包含cookies，需要设置XMLHttpRequest对象的withCredentials属性：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xhr.withCredentials = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;若使用jQuery则代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    type: &lt;span class=&quot;string&quot;&gt;&quot;get&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url: &lt;span class=&quot;string&quot;&gt;&quot;http://v2.com&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xhrFields: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        withCredentials: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: &amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// success&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    error: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       	&lt;span class=&quot;comment&quot;&gt;// error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;服务器（PHP为例）同时也要设置相应的HTTP头：&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;header(&lt;span class=&quot;string&quot;&gt;&quot;Access-Control-Allow-Credentials: true&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;withCredentials属性会使请求中包含请求域（v2.com）中的所有cookies，返回的响应也会包含请求域（v2.com）中的所有cookies。但需要注意的是这些cookies仍然遵循同源策略，所以你的JS代码不能访问document.cookie或者response headers中的cookies。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.html5rocks.com/en/tutorials/cors/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.html5rocks.com/en/tutorials/cors/&lt;/a&gt; 中还提到simple requests和”not-so-simple requests” ，之后有时间再认真研究一下。&lt;/p&gt;
&lt;h4 id=&quot;使用JSONP实现跨域请求&quot;&gt;&lt;a href=&quot;#使用JSONP实现跨域请求&quot; class=&quot;headerlink&quot; title=&quot;使用JSONP实现跨域请求&quot;&gt;&lt;/a&gt;使用JSONP实现跨域请求&lt;/h4&gt;&lt;p&gt;JSONP的原理就是：因为&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签是不受同源策略限制的，没有跨域限制，JSONP就是利用这点来实现跨域请求。当需要进行跨域请求时，JS脚本动态地添加&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签，&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签的src属性指向所需地址，如生成&lt;code&gt;&amp;lt;script src=&amp;quot;http://v2.com&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;，然后JS和服务器约定一个回调函数名（默认为callback，不是callback的话需要以参数形式传给服务器），JS提供这个回调函数。服务器产生的响应为JSON数据的包装（即JSONP， JSON with Padding），如callback({“id”: 1, “name”, “vboar”})。这里的callback就是回调函数名，{“id”: 1, “name”, “vboar”}就是json数据，将作为callback函数的参数。这样的话，浏览器就会调用callback函数，并传递解析后的json对象作为参数，这样其实就能跨域接收数据了。&lt;/p&gt;
&lt;p&gt;用jQuery书写JSONP实现跨域请求的代码非常简单。&lt;/p&gt;
&lt;p&gt;前端JS代码：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url: &lt;span class=&quot;string&quot;&gt;&quot;http://v2.com&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jsonp: &lt;span class=&quot;string&quot;&gt;&quot;callback&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dataType: &lt;span class=&quot;string&quot;&gt;&quot;jsonp&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    error: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;error&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;后端PHP中不能直接返回JSON格式的数据，要返回 &lt;code&gt;回调函数(JSON数据)&lt;/code&gt; 这样形式的数据：&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$arr = &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;success&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; $_GET[&lt;span class=&quot;string&quot;&gt;&#39;callback&#39;&lt;/span&gt;].&lt;span class=&quot;string&quot;&gt;&#39;(&#39;&lt;/span&gt;.json_encode($arr).&lt;span class=&quot;string&quot;&gt;&#39;)&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用原生Javascript代码实现也不困难：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; callbackName = &lt;span class=&quot;string&quot;&gt;&#39;callback&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;[callbackName] = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; script = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;script&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;script.src = &lt;span class=&quot;string&quot;&gt;&#39;http://v2.com?callback=&#39;&lt;/span&gt;+callbackName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.appendChild(script);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述代码没有删除jsonp动态创建的节点，而jQuery方式会自动删除script节点。jQuery在onload/complete时，删除节点。除了删除节点，还需要删除节点上的属性吗？关于这点讨论，可以前往 &lt;a href=&quot;https://segmentfault.com/q/1010000000483131&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://segmentfault.com/q/1010000000483131&lt;/a&gt; 查看。&lt;/p&gt;
&lt;p&gt;那JSONP和CORS实现跨域请求对比，两者又有什么优点和缺点呢？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CORS支持所有类型的HTTP请求，而JSON只支持GET请求；&lt;/li&gt;
&lt;li&gt;使用CORS，开发者可以使用普通的XMLHttpRequest发起请求和获得数据，比起JSONP有更好的错误处理；&lt;/li&gt;
&lt;li&gt;JSONP主要被老的浏览器支持（&amp;lt; IE8），它们往往不支持CORS，而绝大多数现代浏览器都已经支持了CORS。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实现AJAX跨域请求还有其他的方案，但CORS和JSONP应该是目前最常用的两种解决方案了，而且CORS更先进更方便更灵活，应该是实现AJAX跨域请求的主流方案了，毕竟用IE老古董的人越来越少了呀。&lt;/p&gt;
&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/Security/Same-origin_policy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Javascript的同源策略 - MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bbs.csdn.net/topics/390716390&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;浏览器同源策略 - CSDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/4e17445d66e2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;同源策略——浏览器的安全卫士 - 流星狂飙 - 简书&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/25427931&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;对于浏览器的同源策略你是怎样理解的呢？ - 知乎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://enable-cors.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;enable cross-origin resource sharing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.html5rocks.com/en/tutorials/cors/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Using CORS - HTML5 Rocks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/hfahe/article/details/7730944&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTML5安全：CORS（跨域资源共享）简介 - 蒋宇捷 - CSDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.iefans.net/ie10-cors-for-xhr/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IE10中的CORS for XHR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/f3840c8c02ba&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ajax - 跨域请求 - happyLindz - 简书&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/2067472/what-is-jsonp-all-about&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;What is JSONP all about? - StackOverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/19966531&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JSONP 的工作原理是什么？ - 知乎&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/q/1010000000483131&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于JSONP的两点疑问 - SegmentFault&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/9d0fb4f47cc0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Javascript跨域问题小记 - 射覆 - 简书&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前写Web项目的时候一般都是用AJAX调用服务器提供的接口获得数据，但后来遇到了AJAX由于不同源而不用跨域请求的问题。为了实现AJAX跨域请求，我重新回顾了之前在《面向Web的计算》课上讲过的同源策略（Same Origin Policy, SOP），并了解AJAX跨域
    
    </summary>
    
    
      <category term="前端" scheme="http://kass.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="安全" scheme="http://kass.top/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="AJAX" scheme="http://kass.top/tags/AJAX/"/>
    
  </entry>
  
  <entry>
    <title>真的开始写博客了&gt;_&lt;#</title>
    <link href="http://kass.top/2016/03/02/start-up-my-blog/"/>
    <id>http://kass.top/2016/03/02/start-up-my-blog/</id>
    <published>2016-03-02T08:01:17.000Z</published>
    <updated>2016-04-22T07:52:27.036Z</updated>
    
    <content type="html">&lt;p&gt;之前很多次都搭建了自己的博客，说要开始写博客，然而从大一都大三都没有实现= = 这几天忽然意识到自己真的已经大三了，而且要找实习了！！！然后发现自己两年多好像并没有学到什么东西…也就写了几个水水的大作业和项目。平时遇到什么问题和困难就百度谷歌一下，当时懂了就解决掉那个问题，然而过了很久之后…还是不懂…看别人写的技术博客感觉很有意思，然而过了很久什么都不记得…人懒啊，以至于读书笔记、学习笔记都不怎么写，更不用说博客了…那，去应聘的时候，我有什么资本说我很牛逼呢，凭什么让别人招了我。&lt;/p&gt;
&lt;p&gt;于是，这次真的下定决心了，即便花掉不少时间，也要认真地写博客，一是巩固自己对这方面的理解，二是将来可以回头看看，可以捡回来，说不定还有什么新的理解。&lt;/p&gt;
&lt;p&gt;新搭建的博客托管在GitHub Pages上。就近几天吧大致确定了自己未来的发展方向，目前暂时以Web前端开发为主吧，那博客的内容大多应该是围绕前端开发的吧= =&lt;/p&gt;
&lt;p&gt;最后希望自己能坚持下去，也希望内推面试要成功过啊！！！加油！！！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前很多次都搭建了自己的博客，说要开始写博客，然而从大一都大三都没有实现= = 这几天忽然意识到自己真的已经大三了，而且要找实习了！！！然后发现自己两年多好像并没有学到什么东西…也就写了几个水水的大作业和项目。平时遇到什么问题和困难就百度谷歌一下，当时懂了就解决掉那个问题，
    
    </summary>
    
    
      <category term="日常" scheme="http://kass.top/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
</feed>
